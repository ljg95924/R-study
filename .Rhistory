df_new<-df_raw
df_new
df_new<-rename(df_new,v2=var2)
df_new
#파생변수 만들기
df<-data.frame(var1=c(4,3,8),var2=c(2,6,1))
df
df$var_sum<-df$var1+df$var2
df
mpg$total<-(mpg$cty+mpg$hwy)/2
head(mpg)
mpg$total<-(mpg$cty+mpg$hwy)/2
head(mpg)
summary(mpg$total)
hist(mpg$total)
mpg$test<-ifelse(mpg$total >=20,'pass','fail')
head(mpg,20)
head(mpg)
head(mpg,20)
table(mpg$test)
library(ggplot2)
qplot(mpg$test)
mpg$grade<-ifelse(mpg$total>=30,'A',ifelse(mpg$total>=20,'B','C'))
head(mpg,20)
head(mpg,20)
table(mpg$grade
table(mpg$grade)
table(mpg$grade)
qplot(mpg$grade)
#ggplot2의 midwest 데이터를 데이터 프레임 형태로 불러온 다음 데이터의 특징을 파악하세요
midwest
#ggplot2의 midwest 데이터를 데이터 프레임 형태로 불러온 다음 데이터의 특징을 파악하세요
as.data.frame(midwest)
#Q1. ggplot2의 midwest 데이터를 데이터 프레임 형태로 불러온 다음 데이터의 특징을 파악하세요
mw<-as.data.frame(midwest)
#Q1. ggplot2의 midwest 데이터를 데이터 프레임 형태로 불러온 다음 데이터의 특징을 파악하세요
as.data.frame(midwest)
#Q1. ggplot2의 midwest 데이터를 데이터 프레임 형태로 불러온 다음 데이터의 특징을 파악하세요
head(as.data.frame(midwest))
mw
#Q2. poptotal(전체인구)변수를 total로, popasian(아시아인구)변수를 asian으로 수정하세요.
rename(mw,total=popasian)
#Q2. poptotal(전체인구)변수를 total로, popasian(아시아인구)변수를 asian으로 수정하세요.
rename(mw,total=popasian,asian=popasian)
#Q2. poptotal(전체인구)변수를 total로, popasian(아시아인구)변수를 asian으로 수정하세요.
rename(mw,total=poptotal,asian=popasian)
#Q3. total,asian 변수를 이용해 '전체 인구 대비 아시아 인구 백분율' 파생변수를 만들고, 히스토그램을 만들어 도시들이 어떻게 분포하는지 살펴보세요.
mw
#Q2. poptotal(전체인구)변수를 total로, popasian(아시아인구)변수를 asian으로 수정하세요.
mw<-rename(mw,total=poptotal,asian=popasian)
#Q3. total,asian 변수를 이용해 '전체 인구 대비 아시아 인구 백분율' 파생변수를 만들고, 히스토그램을 만들어 도시들이 어떻게 분포하는지 살펴보세요.
mw
#Q3. total,asian 변수를 이용해 '전체 인구 대비 아시아 인구 백분율' 파생변수를 만들고, 히스토그램을 만들어 도시들이 어떻게 분포하는지 살펴보세요.
mw$AsianPercent<-mw$asian/mw$total
mw
hist(mw$AsianPercent)
mw
#Q4. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 'large',그 외에는 'small'을 부여하는 파생변수를 만들어 보세요.
mw$asian
#Q4. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 'large',그 외에는 'small'을 부여하는 파생변수를 만들어 보세요.
mw$AsianPercent
#Q4. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 'large',그 외에는 'small'을 부여하는 파생변수를 만들어 보세요.
mean(mw$AsianPercent)
#Q4. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 'large',그 외에는 'small'을 부여하는 파생변수를 만들어 보세요.
avg<-mean(mw$AsianPercent)
mw$grade<-ifelse(mw$AsianPercent>=avg,'large','small')
mw
#Q5. 'large'와'small'에 해당하는 지역이 얼마나 되는지 빈도표와 빈도 막대 그래프를 만들어 확인하세요.
table(mw)
#Q5. 'large'와'small'에 해당하는 지역이 얼마나 되는지 빈도표와 빈도 막대 그래프를 만들어 확인하세요.
table(mw$grade)
hist(mw$grade)
hist(mw$grade)
qplot(mw$grade)
library(dplyr)
exam<-read.csv('csv_exam.csv')
exam
exam%>%filter(class==1)
exam%>%filter(class!=1)
exam%>%filter(math>50)
exam%>%filter(math>50 & class=1 )
exam%>%filter(math>50 & class==1)
exam%>%filter(class %in% c(1,3,5))
class1<-exam%>%filter(class==1)
class2<-exam%>%filter(class==2)
maen(class1$math)
mean(class1$math)
mean(class2$math)
mpg
#Q1. displ(자동차 배기량)이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 hwy(고속도로연비가)가 평균적으로 더 높은지 알아보세요
displ1<-mpg$displ
displ1
#Q1. displ(자동차 배기량)이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 hwy(고속도로연비가)가 평균적으로 더 높은지 알아보세요
displ1<-mpg%>%filter(displ)
#Q1. displ(자동차 배기량)이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 hwy(고속도로연비가)가 평균적으로 더 높은지 알아보세요
displ1<-mpg%>%filter(displ<=4)
displ2<-mpg%>%filter(displ>=5)
displ1
mean(displ1$hwy)
mean(displ2$hwy)
#Q2. 'audi'와'toyota'중 어느 manufacturer(자동차 제조 회사)의 cty(도시연비)가 평균적으로 더 높은지 알아보세요.
audi<-mpg%>%filter(manufacturer=='audi')
audi
toyota<-mpg%>%filter(manufacturer=='toyota')
mean(audi$cty)
mean(toyota$cty)
#Q3. 'chevrolet','ford','honda' 자동차의 고속도로 연비 평균을 알아보려고 합니다. 이 회사들의 데이터를 추출한 후 hwy 전체 평균을 구해보세요
chevrolet<-mpg%>%filter(manufacturer=='chevrolet')
chevrolet
ford<-mpg%>%filter(manufacturer=='ford')
honda<-mpg%>%filter(manufacturer=='honda')
mean(chevrolet$hwy)
mean(ford$hwy)
mean(honda$honda)
mean(honda$hwy)
#Q3. 'chevrolet','ford','honda' 자동차의 고속도로 연비 평균을 알아보려고 합니다. 이 회사들의 데이터를 추출한 후 hwy 전체 평균을 구해보세요
chevrolet<-mpg%>%filter(manufacturer %in% c('chevrolet','ford','honda'))
chevrolet
mean(chevrolet$hwy)
#필요한 변수만 추출하기
exam%>%select(english)
exam%>%select(class,math,english)
exam%>%select(-math)
exam%>%filter(class==1)%>%select(english)
exam%>%
select(id,math)%>%
head
#Q1. mpg 데이터는 11개 변수로 구성되어 있습니다. 이 중 일부만 추출해 분석에 활용하려고 합니다. mpg 데이터에서 class,cty 변수를 추출해 새로운 데이터를 만드세요.
mpg%>%select(class,cty)
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
mpg%>%filter(manufacturer%in%c('suv','compact'))
mpg
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
mpg%>%filter(manufacturer%in%c('suv','compact'))
exam%>%filter(class==1)%>%select(english)
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
mpg%>%filter(manufacturer %in% c('suv','compact'))
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
mpg%>%filter(manufacturer %in% c('suv','compact'))
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
test<-mpg%>%filter(manufacturer %in% c('suv','compact'))
test
test
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
mpg%>%filter(class %in% c('suv','compact'))
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
test<-mpg%>%filter(class %in% c('suv','compact'))
mean(test$cty)
test2<-mpg%>%filter(class=='compact')
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
test1<-mpg%>%filter(class== 'suv')
mean(test1$cty)
mean(test2$cty)
#순서대로 정렬하기
exam%>%arrange(math)
exam%>%arrange(desc(math))#내림차순 정렬
exam%>%arrange(class,math)
mpg%>%filter(manufacturer=='audi')
#Q1. 'audi'에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 합니다. 'audi'에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요
mpg%>%filter(manufacturer=='audi')%>%arrange(hwy)
#Q1. 'audi'에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 합니다. 'audi'에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요
mpg%>%filter(manufacturer=='audi')%>%arrange(desc(hwy))
exam%>%mutate(total=math+english+science)%>%head
exam%>%mutate(total=math+english+science,
mean=(math+english+science)/3)%>%
head
exam%>%
mutate(test=ifelse(science>=60,'pass','fail'))%>%
head
exam%>%
mutate(total=math+english+science)%>%
arrange(total)%>%
head
#Q1. mpg 데이터 복사본을 만들고, cty와 hwy를 더한 '합산 연비 변수'를 추가하세요.
mpgdata<-mpg
mpgdata%>%
mutate(total_y=hwy+cty)
mpgdata%>%
mutate(total_y=hwy+cty)
mpgdata
mpgdata<-mpgdata%>%
mutate(total_y=hwy+cty)
mpgdata<-mpgdata%>%
mutate(avg_y=total_y/2)
#Q3. '평균 연비 변수'가 가장 높은 자동차 3종의 데이터를 출력하세요.
mpgdata%>%
arrange(desc(avg_y))%>%
head
#집단별로 요약하기
exam%>%summarise(mean_math=mean(math))
#집단별로 요약하기
exam%>%summarise(mean_math=mean(math))
library(dplyr)
#집단별로 요약하기
exam%>%summarise(mean_math=mean(math))
exam
exam<-read.csv('csv_exam.csv')
exam%>%summarise(mean_math=mean(math))
exam%>%summarise(mean_math=mean(math)) #math 평균 산출
exam
exam%>%
group_by(class)%>% #class 별로 분리
summarise(mean_math=mean(math)) #math 평균 산출
exam%>%
group_by(class)%>%
summarise(mean_math=mean(math),
sum_math=sum(math),
median_math=median(math),
n=n())
mpg%>%
group_by(manufacturer,drv)%>%
summarise(mean_cty=mean(cty))%>%
head(10)
library(ggplot2)
mpg%>%
group_by(manufacturer,drv)%>%
summarise(mean_cty=mean(cty))%>%
head(10)
mpg%>%
group_by(manufacturer)%>%
filter(class=='suv')%>%
mutate(tot=(cty+hwy)/2)%>%
summarise(mean_tot=mean(tot))%>%
arrange(desc(mean(tot)))%>%
head(5)
mpg%>%
group_by(manufacturer)%>%
filter(class=='suv')%>%
mutate(tot=(cty+hwy)/2)%>%
summarise(mean_tot=mean(tot))%>%
arrange(desc(mean(tot)))%>%
head(5)
mpg%>%
group_by(manufacturer)%>%
filter(class=='suv')%>%
mutate(tot=(cty+hwy)/2)%>%
summarise(mean_tot=mean(tot))%>%
arrange(desc(mean_tot))%>%
head(5)
#Q1. mpg 데이터의 class는 'suv','compact' 등 자동차를 톡징에 따라 일곱 종류 로 분류한 변수 입니다.
#어떤 차종의 도시 연비가 높은지 비교해보려고 합니다. class별 cty평균을 구해보세요.
mpg%>%
group_by(class)%>%
summarise(cty_avg=mean(cty))
#Q2. 어떤 차종의 도시 연비가 높은지 쉽게 알아볼 수 있도록 cty 평균이 높은 순으로 정렬해보세요.
mpg%>%
group_by(class)%>%
summarise(cty_avg=mean(cty))%>%
arrange(desc(cty))
#Q2. 어떤 차종의 도시 연비가 높은지 쉽게 알아볼 수 있도록 cty 평균이 높은 순으로 정렬해보세요.
mpg%>%
group_by(class)%>%
summarise(cty_avg=mean(cty))%>%
arrange(desc(cty_avg))
#Q3. hwy 평균이 가장 높은 회사 세곳을 출력하세요.
mpg%>%
group_by(class)%>%
summarise(cty_avg=mean(cty))%>%
arrange(desc(cty_avg))%>%
head(3)
#집단별로 요약하기
mpg
#Q4. 각 회사별 'compact'차종 수를 내림차순으로 정렬해 출력하세요.
mpg%>%
group_by(manufacturer)%>%
filter(model='compact')%>%
arrange(desc(model))
#Q4. 각 회사별 'compact'차종 수를 내림차순으로 정렬해 출력하세요.
mpg%>%
group_by(manufacturer)%>%
filter(model=='compact')%>%
arrange(desc(model))
#Q4. 각 회사별 'compact'차종 수를 내림차순으로 정렬해 출력하세요.
mpg%>%
group_by(manufacturer)%>%
filter(model=='compact')
mpg
#Q4. 각 회사별 'compact'차종 수를 내림차순으로 정렬해 출력하세요.
mpg%>%
group_by(manufacturer)%>%
filter(class=='compact')%>%
arrange(desc(model))
#Q4. 각 회사별 'compact'차종 수를 내림차순으로 정렬해 출력하세요.
mpg%>%
group_by(manufacturer)%>%
filter(class=='compact')%>%
arrange(desc(class))
#Q4. 각 회사별 'compact'차종 수를 내림차순으로 정렬해 출력하세요.
mpg%>%
group_by(manufacturer)%>%
filter(class=='compact')%>%
arrange(desc(class))
#Q4. 각 회사별 'compact'차종 수를 내림차순으로 정렬해 출력하세요.
mpg%>%
group_by(manufacturer)%>%
filter(class=='compact')%>%
summarise(n=n())%>%
arrange(desc(class))
#Q4. 각 회사별 'compact'차종 수를 내림차순으로 정렬해 출력하세요.
mpg%>%
group_by(manufacturer)%>%
filter(class=='compact')%>%
summarise(n=n())
#Q4. 각 회사별 'compact'차종 수를 내림차순으로 정렬해 출력하세요.
mpg%>%
group_by(manufacturer)%>%
filter(class=='compact')%>%
summarise(n=n())%>%
arrange(desc(n))
test1<-data.frame(id=c(1,2,3,4,5),midterm=c(60,80,70,90,85))
test2<-data.frame(id=c(1,2,3,4,5),final=c(70,83,65,95,80)) #기말 고사 데이터 생성
test1
total<-left_join(test1,test2,by='id')
total
nameM-data.frame(class=c(1,2,3,4,5),teacher=c('kim','lee','park','choi','jung'))
name<-data.frame(class=c(1,2,3,4,5),teacher=c('kim','lee','park','choi','jung'))
name
exam_new<-left_join(exam,name,by='class')
exam_new
name
wxam
exam
exam_new
#세로로 합치기
group_a<-data.frame(id=c(1,2,3,4,5),test=-c(60,80,70,90,85))
group_b<-data.frame(id=c(6,7,8,9,10),test=c(70,83,65,95,80))
group_all<-bind_rows(group_a,group_b)
group_all
fuel<-data.frame(fl=c('c','d','e','p','r'),price_fl=c(2.35,2.38,2.11,2.76,2.22),stringsAsFactors=F)
fuel
#Q1. mpg 데이터에는 연료 종류를 나타낸 fl 변수는 있지만 연료가격을 나타낸 변수는 없습니다. 위에서 만든 fuel 데이터를 이용해 mpg 데이터에 price_fl(연료가격)변수를 추가하세요.
mpg
left_join(mpg,fuel,by='fl')
mpg<-left_join(mpg,fuel,by='fl')
#Q2. 연료 가격 변수가 잘 추가됐는지 확인하기 위해 model,fl,price_fl 변수를 추출해 앞부분 5행을 출력해보세요.
mpg
#Q2. 연료 가격 변수가 잘 추가됐는지 확인하기 위해 model,fl,price_fl 변수를 추출해 앞부분 5행을 출력해보세요.
mpg%>%
select(model,fl,price_fl)%>%
head(5)
#미국 동북중부 437개 지역의 인구통계를 담고있는 midwest 데이터를 사용해 데이터 분석 문제를 해결해 보세요. midwest는ggplot2패키지에 들어있습니다.
#Q1. popadults는 해당 지역의 성인 인구, poptotal 은 전체 인구를 나타냅니다. midwest 데이터에 '전체인구대비 미성년인구 백분율' 변수를 추가하세요.
midwest
#미국 동북중부 437개 지역의 인구통계를 담고있는 midwest 데이터를 사용해 데이터 분석 문제를 해결해 보세요. midwest는ggplot2패키지에 들어있습니다.
#Q1. popadults는 해당 지역의 성인 인구, poptotal 은 전체 인구를 나타냅니다. midwest 데이터에 '전체인구대비 미성년인구 백분율' 변수를 추가하세요.
midwest%>%
summarise(minor_total_percent=(1-100*popadults/poptotal))
#미국 동북중부 437개 지역의 인구통계를 담고있는 midwest 데이터를 사용해 데이터 분석 문제를 해결해 보세요. midwest는ggplot2패키지에 들어있습니다.
#Q1. popadults는 해당 지역의 성인 인구, poptotal 은 전체 인구를 나타냅니다. midwest 데이터에 '전체인구대비 미성년인구 백분율' 변수를 추가하세요.
midwest%>%
summarise(minor_total_percent=(1-100*popadults/poptotal))
#미국 동북중부 437개 지역의 인구통계를 담고있는 midwest 데이터를 사용해 데이터 분석 문제를 해결해 보세요. midwest는ggplot2패키지에 들어있습니다.
#Q1. popadults는 해당 지역의 성인 인구, poptotal 은 전체 인구를 나타냅니다. midwest 데이터에 '전체인구대비 미성년인구 백분율' 변수를 추가하세요.
midwest%>%
mutate(minor_total_percent=(1-100*popadults/poptotal))
#미국 동북중부 437개 지역의 인구통계를 담고있는 midwest 데이터를 사용해 데이터 분석 문제를 해결해 보세요. midwest는ggplot2패키지에 들어있습니다.
#Q1. popadults는 해당 지역의 성인 인구, poptotal 은 전체 인구를 나타냅니다. midwest 데이터에 '전체인구대비 미성년인구 백분율' 변수를 추가하세요.
midwest%>%
mutate(minor_total_percent=(1-100*popadults/poptotal))%>%
head(5)
#미국 동북중부 437개 지역의 인구통계를 담고있는 midwest 데이터를 사용해 데이터 분석 문제를 해결해 보세요. midwest는ggplot2패키지에 들어있습니다.
#Q1. popadults는 해당 지역의 성인 인구, poptotal 은 전체 인구를 나타냅니다. midwest 데이터에 '전체인구대비 미성년인구 백분율' 변수를 추가하세요.
midwest%>%
mutate(minor_total_percent=(1-100*popadults/poptotal))%>%
head(1)
#미국 동북중부 437개 지역의 인구통계를 담고있는 midwest 데이터를 사용해 데이터 분석 문제를 해결해 보세요. midwest는ggplot2패키지에 들어있습니다.
#Q1. popadults는 해당 지역의 성인 인구, poptotal 은 전체 인구를 나타냅니다. midwest 데이터에 '전체인구대비 미성년인구 백분율' 변수를 추가하세요.
midwest%>%
mutate(minor_total_percent=(1-100*popadults/poptotal))%>%
head(1)
#미국 동북중부 437개 지역의 인구통계를 담고있는 midwest 데이터를 사용해 데이터 분석 문제를 해결해 보세요. midwest는ggplot2패키지에 들어있습니다.
#Q1. popadults는 해당 지역의 성인 인구, poptotal 은 전체 인구를 나타냅니다. midwest 데이터에 '전체인구대비 미성년인구 백분율' 변수를 추가하세요.
midwest%>%
mutate(minor_total_percent=(1-100*popadults/poptotal))%>%
head(1)
#미국 동북중부 437개 지역의 인구통계를 담고있는 midwest 데이터를 사용해 데이터 분석 문제를 해결해 보세요. midwest는ggplot2패키지에 들어있습니다.
#Q1. popadults는 해당 지역의 성인 인구, poptotal 은 전체 인구를 나타냅니다. midwest 데이터에 '전체인구대비 미성년인구 백분율' 변수를 추가하세요.
mw<-midwest%>%
mutate(minor_total_percent=(1-100*popadults/poptotal))
mw
mw%>%select(minor_total_percent)
#미국 동북중부 437개 지역의 인구통계를 담고있는 midwest 데이터를 사용해 데이터 분석 문제를 해결해 보세요. midwest는ggplot2패키지에 들어있습니다.
#Q1. popadults는 해당 지역의 성인 인구, poptotal 은 전체 인구를 나타냅니다. midwest 데이터에 '전체인구대비 미성년인구 백분율' 변수를 추가하세요.
mw<-midwest%>%
mutate(minor_total_percent=(1-popadults/poptotal))
mw%>%select(minor_total_percent)
#미국 동북중부 437개 지역의 인구통계를 담고있는 midwest 데이터를 사용해 데이터 분석 문제를 해결해 보세요. midwest는ggplot2패키지에 들어있습니다.
#Q1. popadults는 해당 지역의 성인 인구, poptotal 은 전체 인구를 나타냅니다. midwest 데이터에 '전체인구대비 미성년인구 백분율' 변수를 추가하세요.
mw<-midwest%>%
mutate(minor_total_percent=(100-100*popadults/poptotal))
mw%>%select(minor_total_percent)
#Q2. 미성년 인구 백분율이 가장 높은 상위 5개 county의 미성년 인구 백분율을 출력하세요.
mw%>%
arrange(desc(minor_total_percent))%>%
head(5)
#Q2. 미성년 인구 백분율이 가장 높은 상위 5개 county의 미성년 인구 백분율을 출력하세요.
mw%>%
select(county,minor_total_percent)%>%
arrange(desc(minor_total_percent))%>%
head(5)
#Q3. 분류표의 기준에 따라 미성년 비율 등급 변수를 추가하고, 각 등급에 몇 개의 지역이 있는지 알아보세요. (large= 40%이상, middle=30~40%, small= 30%미만)
mw$minor_total_grade<-ifelse(mw$minor_total_percent>=40,'large',ifelse(mw$minor_total_percent>=30,'middle','small'))
#Q3. 분류표의 기준에 따라 미성년 비율 등급 변수를 추가하고, 각 등급에 몇 개의 지역이 있는지 알아보세요. (large= 40%이상, middle=30~40%, small= 30%미만)
mw$minor_total_grade<-ifelse(mw$minor_total_percent>=40,'large',ifelse(mw$minor_total_percent>=30,'middle','small'))
mw
mw%>%select(minor_total_grade,minor_total_percent)
#Q4. popasian은 해당 지역의 아시아인 인구를 나타냅니다. '전체 인구 대비 아시아인 인구 백분율' 변수를 추가하고 하위 10개 지역의 state(주),county(지역),아시아인 인구 백분율을 출력하세요.
mw<-mw%>%
mutate(popasian_percent=100*popasian/poptotal)%>%
arrange(popasian_percent)%>%
head(10)%>%
select(state,county,popasian_percent)
mw
#미국 동북중부 437개 지역의 인구통계를 담고있는 midwest 데이터를 사용해 데이터 분석 문제를 해결해 보세요. midwest는ggplot2패키지에 들어있습니다.
#Q1. popadults는 해당 지역의 성인 인구, poptotal 은 전체 인구를 나타냅니다. midwest 데이터에 '전체인구대비 미성년인구 백분율' 변수를 추가하세요.
mw<-midwest%>%
mutate(minor_total_percent=(100-100*popadults/poptotal))
#Q2. 미성년 인구 백분율이 가장 높은 상위 5개 county의 미성년 인구 백분율을 출력하세요.
mw%>%
select(county,minor_total_percent)%>%
arrange(desc(minor_total_percent))%>%
head(5)
#Q3. 분류표의 기준에 따라 미성년 비율 등급 변수를 추가하고, 각 등급에 몇 개의 지역이 있는지 알아보세요. (large= 40%이상, middle=30~40%, small= 30%미만)
mw$minor_total_grade<-ifelse(mw$minor_total_percent>=40,'large',ifelse(mw$minor_total_percent>=30,'middle','small'))
#Q4. popasian은 해당 지역의 아시아인 인구를 나타냅니다. '전체 인구 대비 아시아인 인구 백분율' 변수를 추가하고 하위 10개 지역의 state(주),county(지역),아시아인 인구 백분율을 출력하세요.
mw2<-mw%>%
mutate(popasian_percent=100*popasian/poptotal)%>%
arrange(popasian_percent)%>%
head(10)%>%
select(state,county,popasian_percent)
mw2
mw
df<-data.frame(sex=c('M','F',NA,'M','F'),score=c(5,4,3,4,NA))
df
df<-data.frame(sex=c('M','F',NA,'M','F'),score=c(5,4,3,4,NA))
df
is.na(df)
table(is.na(df))
table(is.na(df$sex))
table(is.na(df$score))
library(dplyr)
df%>%filter(is.na(score))
df%>%filter(is.na(score))
df%>%filter(!is.na(score))
#결측치 제거한 데이터 저장
df_nomiss<-df%>%filter(!is.na(score))
mean(df_nomiss$score)
#결측치 제거한 데이터 저장
df_nomiss<-df%>%filter(!is.na(score) & !is.na(sex))
mean(df_nomiss$score)
df_nomiss
#모든 변수에 결측치 없는 데이터 추출
df_nomiss2<-na.omit(df)
df_nomiss2
View(group_all)
df_nomiss2
#결측치 제거한 데이터 저장
df_nomiss<-df%>%filter(!is.na(score) & !is.na(sex))
library(dplyr)
library(ggplot2)
mean(df$score,na.rm = T)
mean(df$score,na.rm = T)
df
df<-data.frame(sex=c('M','F',NA,'M','F'),score=c(5,4,3,4,NA)) # <NA> = 결측치
df
mean(df$score,na.rm = T)
exam<-read.csv('csv_exam.csv')
exam
exam[c(3,8,15),'math']<-NA
exam
exam%>%summarise(mean_math=mean(math))
exam%>%summarise(mean_math=mean(math,na.rm=T))
#평균 값으로 결측치 대체하기
mean(exam$math, na.rm=T) #결측치 제외하고 math 평균 산출
exam$math<-ifelse(is.na(exam$math),55,exam$math)
table(is.na(exam$math))
mean(exam$math)
table(outlier$sex)
table(outlier$sex)
#이상치 정제하기
#이상치 sex에 3, score에 6
outlier<-data.frame(sex=c(1,2,1,3,2,1),score=c(5,4,3,4,2,6))
table(outlier$sex)
table(outlier$score)
#결측 처리하기
outlier$sex<-ifelse(outlier$sex ==3 ,NA,outlier$sex)
outlier
outlier$score<-ifelse(outlier$score==6,NA,outlier$score)
outlier
#결측치 제외하기
outlier%>%
filter(!is.na(sex)&!is.na(score))%>%
group_by(sex)%>%
summarise(mean_score=mean(score))
boxplot(mpg$hwy)
boxplot(mpg$hwy)stats
boxplot(mpg$hwy)$stats
mpg$hwy<-ifelse(mpg$hwy<12 | mpg$hwy>37, NA, mpg$hwy) #정상범위 설정 후 그 범위 이외에는 NA 으로 대입
mpg$hwy<-ifelse(mpg$hwy<12 | mpg$hwy>37, NA, mpg$hwy) #정상범위 설정 후 그 범위 이외에는 NA 으로 대입
table(is.na(mpg$hwy))
mpg$hwy<-ifelse(mpg$hwy<12 | mpg$hwy>37, NA, mpg$hwy) #정상범위 설정 후 그 범위 이외에는 NA 으로 대입
table(is.na(mpg$hwy))
mpg%>%
group_by(drv)%>%
summarise(mean_hwy=mean(hwy,na.rm=T))
mpg<-as.data.frame(ggplot2::mpg)
mpg[c(10,14,58,93),'drv']<-'K' #drv 이상치 할
mpg[c(29,43,129,203),'cty']<-c(3,4,39,42)
mpg[c(29,43,129,203),'cty']<-c(3,4,39,42) #cty에 이상치 할당
#Q1. drv에 이상치가 있는지 확인하세요. 이상치를 결측 처리한 후 이상치가 사라졌는지 확인하세요. 결측처리 할때는 %in% 기호를 활용하세요.
table(mpg$drv)
table(mpg$cty)
