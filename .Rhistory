qplot(data=mpg,x=hwy)#data에 mpg를 ,x축에 hwy 변수를 지정해 그래프를 생성
install.packages('ggplot2')#ggplot2 패키지를 설치
library(ggplot2)#ggplot2 패키지를 로드
x<-c('a','a','b','c')
x
qplot(x)#x변수의 빈도 막대 그래프 출력
qplot(data=mpg,x=hwy)#data에 mpg를 ,x축에 hwy 변수를 지정해 그래프를 생성
english<-c(90,80,60,70)
math<-c(50,60,100,20)
df_midterm<-data.frame(english,math)
df_midterm
class<-c(1,1,2,2)
#english,math를 데이터 프레임으로 생성
df_midterm<-data.frame(english,math)
#english,math,class를 데이터 프레임으로 생성
df_midterm<-data.frame(english,math,class)
df_midterm
mean(df_midterm$english)
install.packages('readxl')
library(readxl)
df_exam<-read_excel('excel_exam.xlsx')
df_exam
mean(df_exam$english)
df_exam_novar<-read_excel('excel_exam_novar.xlsx',col_names = F)
df_exam_novar
df_exam_novar<-read_excel('excel_exam_novar.xlsx')
df_exam_novar
df_exam_sheet<-read_excel('excel_exam_sheet.xlsx',sheet = 3)
df_exam_sheet
df_csv_exam<-read.csv('csv_exam.csv')
df_csv_exam
df_midterm
exam<-read.csv('csv_exam')
exam<-read.csv('csv_exam.csv')
exam
head(exam)
dim(exam)
str(exam)
summary(exam)
library(ggplot2)
str(mpg)
summary(mpg)
df_raw<-data.frame(var1=c(1,2,1),var2=c(2,3,2))
df_raw
#변수명 변경
install.packages('dplyr')
library(dplyr)
df_new<-df_raw
df_new
df_new<-rename(df_new,v2=var2)
df_new
#파생변수 만들기
df<-data.frame(var1=c(4,3,8),var2=c(2,6,1))
df
df$var_sum<-df$var1+df$var2
df
mpg$total<-(mpg$cty+mpg$hwy)/2
head(mpg)
mpg$total<-(mpg$cty+mpg$hwy)/2
head(mpg)
summary(mpg$total)
hist(mpg$total)
mpg$test<-ifelse(mpg$total >=20,'pass','fail')
head(mpg,20)
head(mpg)
head(mpg,20)
table(mpg$test)
library(ggplot2)
qplot(mpg$test)
mpg$grade<-ifelse(mpg$total>=30,'A',ifelse(mpg$total>=20,'B','C'))
head(mpg,20)
head(mpg,20)
table(mpg$grade
table(mpg$grade)
table(mpg$grade)
qplot(mpg$grade)
#ggplot2의 midwest 데이터를 데이터 프레임 형태로 불러온 다음 데이터의 특징을 파악하세요
midwest
#ggplot2의 midwest 데이터를 데이터 프레임 형태로 불러온 다음 데이터의 특징을 파악하세요
as.data.frame(midwest)
#Q1. ggplot2의 midwest 데이터를 데이터 프레임 형태로 불러온 다음 데이터의 특징을 파악하세요
mw<-as.data.frame(midwest)
#Q1. ggplot2의 midwest 데이터를 데이터 프레임 형태로 불러온 다음 데이터의 특징을 파악하세요
as.data.frame(midwest)
#Q1. ggplot2의 midwest 데이터를 데이터 프레임 형태로 불러온 다음 데이터의 특징을 파악하세요
head(as.data.frame(midwest))
mw
#Q2. poptotal(전체인구)변수를 total로, popasian(아시아인구)변수를 asian으로 수정하세요.
rename(mw,total=popasian)
#Q2. poptotal(전체인구)변수를 total로, popasian(아시아인구)변수를 asian으로 수정하세요.
rename(mw,total=popasian,asian=popasian)
#Q2. poptotal(전체인구)변수를 total로, popasian(아시아인구)변수를 asian으로 수정하세요.
rename(mw,total=poptotal,asian=popasian)
#Q3. total,asian 변수를 이용해 '전체 인구 대비 아시아 인구 백분율' 파생변수를 만들고, 히스토그램을 만들어 도시들이 어떻게 분포하는지 살펴보세요.
mw
#Q2. poptotal(전체인구)변수를 total로, popasian(아시아인구)변수를 asian으로 수정하세요.
mw<-rename(mw,total=poptotal,asian=popasian)
#Q3. total,asian 변수를 이용해 '전체 인구 대비 아시아 인구 백분율' 파생변수를 만들고, 히스토그램을 만들어 도시들이 어떻게 분포하는지 살펴보세요.
mw
#Q3. total,asian 변수를 이용해 '전체 인구 대비 아시아 인구 백분율' 파생변수를 만들고, 히스토그램을 만들어 도시들이 어떻게 분포하는지 살펴보세요.
mw$AsianPercent<-mw$asian/mw$total
mw
hist(mw$AsianPercent)
mw
#Q4. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 'large',그 외에는 'small'을 부여하는 파생변수를 만들어 보세요.
mw$asian
#Q4. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 'large',그 외에는 'small'을 부여하는 파생변수를 만들어 보세요.
mw$AsianPercent
#Q4. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 'large',그 외에는 'small'을 부여하는 파생변수를 만들어 보세요.
mean(mw$AsianPercent)
#Q4. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 'large',그 외에는 'small'을 부여하는 파생변수를 만들어 보세요.
avg<-mean(mw$AsianPercent)
mw$grade<-ifelse(mw$AsianPercent>=avg,'large','small')
mw
#Q5. 'large'와'small'에 해당하는 지역이 얼마나 되는지 빈도표와 빈도 막대 그래프를 만들어 확인하세요.
table(mw)
#Q5. 'large'와'small'에 해당하는 지역이 얼마나 되는지 빈도표와 빈도 막대 그래프를 만들어 확인하세요.
table(mw$grade)
hist(mw$grade)
hist(mw$grade)
qplot(mw$grade)
library(dplyr)
exam<-read.csv('csv_exam.csv')
exam
exam%>%filter(class==1)
exam%>%filter(class!=1)
exam%>%filter(math>50)
exam%>%filter(math>50 & class=1 )
exam%>%filter(math>50 & class==1)
exam%>%filter(class %in% c(1,3,5))
class1<-exam%>%filter(class==1)
class2<-exam%>%filter(class==2)
maen(class1$math)
mean(class1$math)
mean(class2$math)
mpg
#Q1. displ(자동차 배기량)이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 hwy(고속도로연비가)가 평균적으로 더 높은지 알아보세요
displ1<-mpg$displ
displ1
#Q1. displ(자동차 배기량)이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 hwy(고속도로연비가)가 평균적으로 더 높은지 알아보세요
displ1<-mpg%>%filter(displ)
#Q1. displ(자동차 배기량)이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 hwy(고속도로연비가)가 평균적으로 더 높은지 알아보세요
displ1<-mpg%>%filter(displ<=4)
displ2<-mpg%>%filter(displ>=5)
displ1
mean(displ1$hwy)
mean(displ2$hwy)
#Q2. 'audi'와'toyota'중 어느 manufacturer(자동차 제조 회사)의 cty(도시연비)가 평균적으로 더 높은지 알아보세요.
audi<-mpg%>%filter(manufacturer=='audi')
audi
toyota<-mpg%>%filter(manufacturer=='toyota')
mean(audi$cty)
mean(toyota$cty)
#Q3. 'chevrolet','ford','honda' 자동차의 고속도로 연비 평균을 알아보려고 합니다. 이 회사들의 데이터를 추출한 후 hwy 전체 평균을 구해보세요
chevrolet<-mpg%>%filter(manufacturer=='chevrolet')
chevrolet
ford<-mpg%>%filter(manufacturer=='ford')
honda<-mpg%>%filter(manufacturer=='honda')
mean(chevrolet$hwy)
mean(ford$hwy)
mean(honda$honda)
mean(honda$hwy)
#Q3. 'chevrolet','ford','honda' 자동차의 고속도로 연비 평균을 알아보려고 합니다. 이 회사들의 데이터를 추출한 후 hwy 전체 평균을 구해보세요
chevrolet<-mpg%>%filter(manufacturer %in% c('chevrolet','ford','honda'))
chevrolet
mean(chevrolet$hwy)
#필요한 변수만 추출하기
exam%>%select(english)
exam%>%select(class,math,english)
exam%>%select(-math)
exam%>%filter(class==1)%>%select(english)
exam%>%
select(id,math)%>%
head
#Q1. mpg 데이터는 11개 변수로 구성되어 있습니다. 이 중 일부만 추출해 분석에 활용하려고 합니다. mpg 데이터에서 class,cty 변수를 추출해 새로운 데이터를 만드세요.
mpg%>%select(class,cty)
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
mpg%>%filter(manufacturer%in%c('suv','compact'))
mpg
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
mpg%>%filter(manufacturer%in%c('suv','compact'))
exam%>%filter(class==1)%>%select(english)
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
mpg%>%filter(manufacturer %in% c('suv','compact'))
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
mpg%>%filter(manufacturer %in% c('suv','compact'))
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
test<-mpg%>%filter(manufacturer %in% c('suv','compact'))
test
test
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
mpg%>%filter(class %in% c('suv','compact'))
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
test<-mpg%>%filter(class %in% c('suv','compact'))
mean(test$cty)
test2<-mpg%>%filter(class=='compact')
#Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. 앞에서 추출한 데이터를 이용해 class(자동차 종류)가 'suv'인 자동차와 'compact'인 자동차 중 어떤 자동차의 cty가 더 높은지 알아보세요.
test1<-mpg%>%filter(class== 'suv')
mean(test1$cty)
mean(test2$cty)
#순서대로 정렬하기
exam%>%arrange(math)
exam%>%arrange(desc(math))#내림차순 정렬
exam%>%arrange(class,math)
mpg%>%filter(manufacturer=='audi')
#Q1. 'audi'에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 합니다. 'audi'에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요
mpg%>%filter(manufacturer=='audi')%>%arrange(hwy)
#Q1. 'audi'에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 합니다. 'audi'에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요
mpg%>%filter(manufacturer=='audi')%>%arrange(desc(hwy))
exam%>%mutate(total=math+english+science)%>%head
exam%>%mutate(total=math+english+science,
mean=(math+english+science)/3)%>%
head
exam%>%
mutate(test=ifelse(science>=60,'pass','fail'))%>%
head
exam%>%
mutate(total=math+english+science)%>%
arrange(total)%>%
head
#Q1. mpg 데이터 복사본을 만들고, cty와 hwy를 더한 '합산 연비 변수'를 추가하세요.
mpgdata<-mpg
mpgdata%>%
mutate(total_y=hwy+cty)
mpgdata%>%
mutate(total_y=hwy+cty)
mpgdata
mpgdata<-mpgdata%>%
mutate(total_y=hwy+cty)
mpgdata<-mpgdata%>%
mutate(avg_y=total_y/2)
#Q3. '평균 연비 변수'가 가장 높은 자동차 3종의 데이터를 출력하세요.
mpgdata%>%
arrange(desc(avg_y))%>%
head
